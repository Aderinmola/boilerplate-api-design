openapi: 3.1.0
info:
  title: HNG Stage Three Tasks API
  description: This API provides endpoints to manage users, organisations, blog posts, payments, notifications, and messages. 
    It is designed based on the OpenAPI 3.1 specification and aims to demonstrate a well-structured API definition 
    using FastAPI as the backend framework.
  version: 1.0.0
servers:
  - url: http://api.domain.com/v1

# Authentication

# Users

# Organisation

# User_organisation

# Messages

# Notification

# Payment

components:
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: string
        payment_data:
          type: object
          properties:
            amount:
              type: number
              format: float
            payment_method:
              type: string
            status:
              type: string
        created_at:
          type: string
          format: date-time

    Payment:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: string
        user_data:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        amount:
          type: number
          format: float
        payment_method:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:

  /payments:
    get:
      summary: Get a list of payments
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      summary: Create a new payment
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
      responses:
        '201':
          description: Payment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /payments/{id}:
    get:
      summary: Get a payment by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Payment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '404':
          description: Payment not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string


# Transaction
  /transactions:
    get:
      summary: Get a list of transactions
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      summary: Create a new transaction
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '201':
          description: Transaction created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /transactions/{id}:
    get:
      summary: Get a transaction by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Transaction details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

# Post